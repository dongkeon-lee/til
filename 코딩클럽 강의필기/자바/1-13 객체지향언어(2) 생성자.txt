생성자(Constructor) : instance 가 생성될때, 정확히는 앞에서 new 라는 키워드를 통해서 instance를 생성했는데
그때 불리는 초기화 method이다. 그러니까 method의 일종인데 new를 할때만 불리는 녀석 이라고 생각하자.


생성자의 형식은 class 의 이름이랑 똑같은 이름으로 지어주어야함. 그게 생성자의 규칙임.
생성자는 return 값이 없다. 우리가 new를 했을때 그 개체가 결과가 return 이 되지, 특별히 다른값이 return 되지 않음.


생성자가 없어도 new 를 사용해버리면 알아서 아무것도 없는 빈 생성자를 만든다. 








class Phone {
    String model;
    String color;
    int price;


Phone 이라는 클래스와 그 밑에 인스턴스들이 있는데
이곳에 생성자(constructor)를 생성해보자.




public Phone(String model, String color, int price) {}
괄호 () 안에를 파라미터라고 하는데 
이 파라미터에 든 model 과 클래스의 인스턴스의 model 은 다른 변수이다. 이름만 같다. 
color랑 price 도 마찬가지다.

이밑에 this.model = model 이라고 해주면 클래스의 model 값을 생성자 파라미터의 model값에
할당해준다는것. 그러니 this. 하고 model 은 클래스의 model 이고 = 하고 오는 model 은 
생성사 파라미터의 model 인것.



    public Phone(String model, String color, int price) {
        this.model = model;
        this.color = color;
        this.price = price;
    }

이렇게 생성자를 다 만들 수 있다.
여기서 꿀팁은 생성자는 이렇게 직접 손으로 쓰지않아도
클래스랑 인스턴스만 준비되어있다면
Alt + insert 키로 생성자를 만들 수 있는 선택지를 호출할 수 있고 이걸 선택해서
어떤 인스턴스들을 생성자로 만들지 까지 선택해서 확인을 누르면
저 문구들을 알아서 생성해준다.







이렇게 생성자를 만들고나면 아래쪽에 변화가 생긴다.

public class Main {
    public static void main(String[] args) {
        Phone galaxy = new Phone();

        Phone iphone =new Phone();

이런 부분이 있는데 new Phone(); 의 () 부분에 빨간줄이 그어진다.
왜?
"넌 3개짜리 파라미터를 받는 Phone 이라는 컨스트럭터가 있는데 너는 
() 안에다가 아무것도 안넣어줫으니 코드가 작동하지 않아. 그러니 값을 넣어줘."

괄호안에다가 "galaxy10" 이랑 "black" 이랑 100 이라고 치면 알아서
모델 컬러 프라이스가 세팅됨
( "galaxy10", "black", 100); 이렇게 쳤는데
( model:"galaxy10", color:"black", price:100);
이렇게 자동 변환됨. 왜? 메소드로 딱 되있는 거니까.