정규표현식
소괄호 ( ) 에  든것은 필수포함
대괄호 [ ] 에  든것은 일반적으로 포함시킬 수 있는것들

예를들어보자
^(?=.*[a-zA-Z])[-a-zA-Z0-9_.]{2,10}$/;

이 정규표현식을 분석하자면
모든 정규표현식은 ^이걸로 시작되고 한번 괄호를 열게되면 첫문단에 반드시 ?=.* 이 필요하다.
일단 소괄호 ( ) 에 있는 부분을 보자. 소괄호는 필수 포함 되어야 할 요소들이다.
(?=.*[a-zA-Z])
소문자a~소문자z 까지와 대문자A~대문자Z까지는 필수 포함요소이다.

다음은 대괄호 [ ] 를 보자면 비밀번호에 쓸 수 있는 문자들이다.
[-a-zA-Z0-9_.]
하이푼 소문자a~소문자z 대문자A~대문자Z 0~9 아래하이푼 점





비밀번호에 필요한 정규표현식 중에 이런것도 있다.
^(?=.*\d)(?=.*[a-zA-Z])[0-9a-zA-Z!@#$%^&*]
어? 앞에 \d는 뭐지? 숫자를 의미한다.
이 정규표현식은 알파벳대소문자와 숫자는 꼭 들어가야하며
필수가 아닌것들 중에 비밀번호로 쓸 수 있는것들에는 0-9 a-z A-Z 여기다가 !@#$%^&* 특수문자를 쓸 수있다.



















return;
이게 뭔지앎? 존나 신기함 이거.
이것의 뜻이 뭐냐면
함수를 종료하고 함수를 처음 호출했던 부분으로 돌아가게 하는거임
아이디 중복검사를 실시하는 버튼을 눌렀을때 dup() 이라는 함수를 호출하는데 이 함수안에는
작성한 아이디를 jquery로 username 이란곳에 저장하고 이 유저네임이 공백이 아니거나 정규표현식에 맞게 아이디를 
적었을 경우 해당 아이디를 서버로 보내주는 ajax 코드가 있음.
근데 이상하게 if 공백일때 밑에 if 정규표현식과 맞지 않을때 조건문이있고 그 밑에 서버로 아이디를 보내버렸다는거임.
무슨소리냐면


if 공백일때 {
  "아이디를 입력해주세요" 출력
  return;
}
if 정규표현식이 아닐때 {
  "사용할 수 없는 문자입니다" 출력
  return;
}

ajax 콜해서 아이디 서버로 보내기.




이렇게 써있었다는거임. 이게 뭐야. 공백일때의 elif 를 만들고 그안에 정규표현식이 아닐때를 넣었어야했으며
그  elif 의 안에 else 에 ajax 콜을 했어야 하는거 아니냐? 공백일때 출력문 출력 다하고, 정규표현식 아닌거 썼으면 출력문 출력 다하고 
그다음에 ajax로 콜을 보내게 되는거잖아. 보내면 안되지. 공백이거나 정규표현식에 없는 문자를 썼는데. 그게 아닐때 보내야지.
알고보니 해당 조건문에 return; 으로 함수를 거기서 끝내버린거임 ㅋㅋ




















불 자료형.
불 자료형이 뭐냐? bool 자료형이란것은 참(True) 과 거짓(False)을 나타내는 자료형이다.
불 값은 반드시 이 두가지만 가질 수 있다.
 exists = bool(db.users.find_one({"username": username_receive}))

db에서 유저네임에 해당하는 딕셔너리 값이, 유저네임리시브와 같은녀석을 찾아라. 
bool 함수가 있으니 찾아서 있으면 이 값을 exists 변수에 넣는것이 True. 없으면 exists 변수는 False 가 되어서 변수지정을 못하고 변수가 없어짐.
그래서  뭐 조건문 안쓰고 밑에 바로 리턴 날리는 코드를 적어도, bool값에 의해 False 가 되면 변수 자체가 없는거니까 리턴을 못하는거임
예를들면

exists = bool(db.users.find_one({"username": username_receive}))
return jsonify({'result': 'success', 'exists': exists})
-> bool이 False 라면 exists 변수가 없어서 리턴 코드를 수행하지 못한다.



