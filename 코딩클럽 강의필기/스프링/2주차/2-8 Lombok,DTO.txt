Lombok 은 코드를 자동생성해줘서 절약하여 쓸 수있게 해주는 라이브러리


Course.java 의 getter 부분을 다 지워주고
위에 임포트 하는 곳 아래에다가 

@Getter 치면 알아서 getter 생성해줌


- Course.java
    
    Course 클래스 Getter, NoArgsConstructor 적용
    
- CourseService.java
    
    CourseService 클래스 RequiredArgsConstructor 적용






DTO?
data trasfer object
그냥 원본을 가지고 이리저리 만지는건 위험하니까 똑같은걸 복제해서 그걸로 쓰자는 거임.
domain 에 CourseRequestDto.java 를 생성해주자

Course 가 가지고있는 멤버변수를 그대로 들고있어야겠지?
	private final String title;
	private final String tutor;

@Getter
@Setter // 정보를 이리저리 만질꺼니까 설정하려면 세터도 필요하겠지

그리고 프라이빗으로 생성한 녀석이 final 로 고정되어버리면 생성자를 만들어줘야 하잖아.
@RequiredArgsConstructor 알아서 만들도록 추가해주자.






이제 week02Application.java 로 가서
업데이트 부분을 보면 새롭게 변경된 데이터를 new_course에 저장했다. 근데 이제 이게 필요없고 
DTO를 이용하면 된다.
CourseRequestDto requestDto = new CourseRequestDto("웹개발의 봄, Spring", "임민영"); 
courseService.update(1L, requestDto);
이렇게 바꿔주자
근데 update 메소드는 CourseService.java 에서 받는것을 id 랑 Course course 라고 되어있었는데
이제 받는것이 id는 그대론데 클래스가 CourseRequestDto이고 이름도 바꿔야겠지
    public Long update(Long id, CourseRequestDto requestDto) {

업데이트도 기준이 reqeustDto 로 바뀌었으니 수정.
        course1.update(requestDto);
        return course1.getId();


course 는 Course.java 에 가보면 업데이트 항목에 파라미터로 Course 의 course 로 받고있다. 이것도 바꿔주자
public void update(CourseRequestDto requestDto) {
        this.title = requestDto.getTitle();
        this.tutor = requestDto.getTutor();
    }