생성자도 메서드와 마찬가지로 여러개를 선언할 수 있다.

생성자 오버로딩 :
메서드와 마찬가지로 매개변수의 수, 매개변수의 타입이 다르다면 여러개의 생성자를 선언할 수 있다.




생성자를 만들었는데도 불구하고 나는 기본생성자로도 만들고싶다!
그렇다면 기본생성자를 직접 정의하면 된다.
<Car.java>
public class Car {
    String name;
    int number;

    public Car(String name) {
        this.name = name;
    }

    public Car() {

    }
}
매개변수에 아무것도 집어넣지 않은 기본생성자 같은 생성자를 만들어내버림
이렇게하면



<CarExam3.java>
public class CarExam3 {

    public static void main (String[] args) {
        Car c1 = new Car("소방차");
        Car c2 = new Car(); <---------------------더이상 빨간줄이 있지 않고 정상작동함.
    }

}

또한 Car() 라는 생성자는 매개변수로 아무것도 안받거나 name 이라는 String을 둘다 받게되는
생성자 오버로딩이 되어버림.






"아, 나는 한번에 이름이랑 번호 둘다 받아내는 생성자도 만들고싶은데..." 만드셈
<Car.java>

public Car(String name, int number) {
        this.name = name;
        this.number = number;
    }





그럼 
<CarExam3.java>에서

public class CarExam3 {

    public static void main (String[] args) {
        Car c1 = new Car("소방차");
        Car c2 = new Car();
        Car c3 = new Car("구급차",1111);
    }

}


여기에 추가로 기본생성자를 호출했을때에는 이름과 번호에
이름없음, 0 
을 호출하고 싶으면 어떻게하면 될까?



<Car.java>로 돌아와서
public Car() {

    }
아무것도 안하고 있지만 하고싶은건 아무것도 없이 생성자가 생성되었을때
나는 필드의 name 에다가는 "이름없음" 을 출력하고싶고
number 에다가는 0 이라는 값을 출력해서 생성하고싶음.

 public Car() {
        this.name = "이름없음";
        this.number = 0;
    }
이렇게 하면 되긴하는데 좀더 편하게 쓸수도있음






this 가 뭐냐? 자기 자신을 참조하는 애라매.
public Car() {
        this("이름없음");
        this(0);
    }
이거가능 ㅋ

public Car() {
        this("이름없음",0);
    }
심지어 이것도됨 ㅋㅋ