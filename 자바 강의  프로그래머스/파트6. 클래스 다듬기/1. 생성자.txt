생성자?

public class CarExam {

    public static void main (String[] args) {
        Car c1 = new Car();
        Car c2 = new Car();

    }
}


new Car(); 에서 Car(); 부분이 생성자.
메서드랑 생긴게 비슷한데 메서드와 차이점이 있다.








-생성자를 선언 하는 부분-


public class 클래스명 {
      타입 필드명;

      public 클래스명(매개변수 목록) {                     |
                                                                   |-----> 이 부분이 '생성자 블록'
      }                                                            |

      public 리턴타입 메서드명(매개변수 목록) {

      }
}



차이점이 보임? 
1. 메서드랑은 다르게 리턴타입을 갖지 않는게 생성자임.
2. 생성자를 프로그래머가 코딩하지 않으면, 매개변수가 없는 생성자가 자동으로 만들어진다.
앞으로 매개변수가 없는 생성자를 기본생성자 라고 부르자. 프로그래머가 생성자를 1개라도 만들었다면
기본생성자는 만들어지지 않겠지.



<Car.java>

public class Car {
    String name;
    int number;
}

생성자를 만들지 않았지? 그럼 생성자는 기본생성자로 자동으로 만들어짐.






생성자의 역할 : 객체가 될때 필드를 초기화 해주는 역할
자동차 객체가 만들어질때 반드시 이름을 가지고 만들게 하고싶다면 Car 클래스에
이런 생성자를 만들어두면 된다.
public Car(String 이름을받아들일수있는매개변수n) {
	name = n;
}
자동차 객체가 만들어지면서 name 이 초기화 되는거다.
생성자를 만들었다면 이제다시 
<CarExam.java> 로 가보자

Car c1 = new Car();의 new Car(); 부분이 빨간줄이 그어진다. 왜? 이건 자동으로 만ㄷ르어진
기본생성자라서 내가 방금 생성자를 만들어버렸으니 이건 이제 없는 개념이 되어버린거다.

Car c2 = new Car("소방차");
Car c3 = new Car("구급차");
System.out.println(c2.name);
이러면 출력값이 소방차 로 name이 정말로 초기화 되어 있는걸 알 수 있다.
따라서 c2와c3는 각각 소방차와 구급차라는 name을 가지는 Car 객체를 참조하게 되는것이다.